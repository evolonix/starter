# syntax = docker/dockerfile:1

# Build with:
# docker build -t ~~_starter.name_~~:preview -f apps/web/Dockerfile.preview .
# Run with:
# docker run -it --rm -p 3000:3000 --name ~~_starter.name_~~-~~_starter.name_~~-preview --label com.docker.compose.project=~~_starter.name_~~ ~~_starter.name_~~:preview

# Adjust NODE_VERSION as desired
ARG NODE_VERSION=24.5.0
FROM node:${NODE_VERSION}-slim AS base

# Install Python and pip, clean up apt cache
RUN apt-get update && apt-get install -y python3 python3-pip \
    && rm -rf /var/lib/apt/lists/*

# Install LiteFS dependencies
RUN apt-get update -y && apt-get install -y ca-certificates fuse3 sqlite3

# Node.js app lives here
WORKDIR /app


# Throw-away build stage to reduce size of final image
FROM base AS build

# Copy application code
COPY --link . .

# Install node modules
# RUN npm ci --ignore-scripts # TODO: Use this instead of the following after Nx fixes the release script issue of updating the package-lock.json file
RUN npm install --ignore-scripts

# Set environment
ENV DATABASE_URL="file:/data/sqlite.db"
ENV NODE_ENV="preview"
# Not sure why, but this is needed for Nx graph to work
ENV NX_DAEMON=false

# Build the application
RUN npx nx build web --mode preview


# Final stage for app image
FROM base

# Copy built application
COPY --from=build /app/apps/web/package.json /app
COPY --from=build /app/apps/web/build /app/build
RUN npm install --omit=dev

COPY --from=build /app/node_modules/.prisma /app/node_modules/.prisma
COPY --from=build /app/libs/data/prisma /app/prisma

ENV DATABASE_URL="file:/data/sqlite.db"

RUN npx prisma generate

# Start the server by default, this can be overwritten at runtime
EXPOSE 3000
CMD [ "npm", "run", "start:preview" ]
