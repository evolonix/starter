name: Preview

on:
  # Run this workflow on every PR event. Existing preview apps will be updated when the PR is updated.
  pull_request:
    types: [opened, reopened, synchronize, ready_for_review]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

permissions:
  actions: read
  contents: read

env:
  FLY_API_TOKEN: ${{ secrets.FLY_API_TOKEN }}

jobs:
  preview:
    if: ${{ !github.event.pull_request.draft }}
    runs-on: ubuntu-latest
    outputs:
      affected_build_starter: ${{ steps.affected_build_starter.outputs.projects }}
    steps:
      - uses: actions/checkout@v4
        with:
          filter: tree:0
          fetch-depth: 0

      # This enables task distribution via Nx Cloud
      # Run this command as early as possible, before dependencies are installed
      # Learn more at https://nx.dev/ci/reference/nx-cloud-cli#npx-nxcloud-startcirun
      # Uncomment this line to enable task distribution
      # - run: npx nx-cloud start-ci-run --distribute-on="3 linux-medium-js" --stop-agents-after="e2e-ci"

      # Cache node_modules
      - uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: 'npm'

      - run: npm ci --legacy-peer-deps --ignore-scripts
      # - run: npx playwright install --with-deps
      - uses: nrwl/nx-set-shas@v4

      # Prepend any command with "nx-cloud record --" to record its logs to Nx Cloud
      # - run: npx nx-cloud record -- echo Hello World
      # Nx Affected runs only tasks affected by the changes in this PR/commit. Learn more: https://nx.dev/ci/features/affected
      # When you enable task distribution, run the e2e-ci task instead of e2e
      - run: npx nx affected -t lint test # e2e
      - run: npx nx affected -t build --exclude ~~_starter.name_~~

      - id: affected_build_starter
        if: github.event_name != 'workflow_dispatch'
        run: |
          npx nx show projects --projects ~~_starter.name_~~ --affected
          projects=$(npx nx show projects --projects ~~_starter.name_~~ --affected | tr '\n' ' ' | xargs)
          if [ -z "$projects" ]; then
            echo "No affected projects found for ~~_starter.name_~~."
          fi
          echo "projects=$projects" >> $GITHUB_OUTPUT

      - if: github.event_name == 'workflow_dispatch' || steps.affected_build_starter.outputs.projects != ''
        run: npx nx build ~~_starter.name_~~

  deploy-~~_starter.name_~~-preview:
    environment:
      name: Preview
      # name: pr-${{ github.event.number }}
      url: ${{ steps.deploy_status.outputs.url }}
    runs-on: ubuntu-latest
    concurrency:
      group: pr-${{ github.event.number }}
      cancel-in-progress: false
    needs: preview
    if: github.event_name == 'workflow_dispatch' || needs.preview.outputs.affected_build_starter != ''
    steps:
      - uses: actions/checkout@v4

      - uses: superfly/flyctl-actions/setup-flyctl@master

      # Check status of app and return output if exists or not
      - id: fly_status
        run: |
          if flyctl status --app "~~_starter.name_~~-~~_starter.name_~~-pr-${{ github.event.number }}"; then
            echo "exists=true" >> $GITHUB_OUTPUT
          else
            echo "exists=false" >> $GITHUB_OUTPUT
          fi

      - if: ${{ steps.fly_status.outputs.exists == 'false' }}
        run: |
          flyctl apps create --org ~~_starter.name_~~ "~~_starter.name_~~-~~_starter.name_~~-pr-${{ github.event.number }}" \
            --name "~~_starter.name_~~-~~_starter.name_~~-pr-${{ github.event.number }}" \
            --yes

      - run: |
          flyctl deploy --config apps/~~_starter.name_~~/fly.preview.toml --app "~~_starter.name_~~-~~_starter.name_~~-pr-${{ github.event.number }}" \
            --build-arg VITE_FLAGSMITH_ENVIRONMENT_ID="${{ secrets.VITE_FLAGSMITH_ENVIRONMENT_ID }}"

      - id: deploy_status
        run: |
          flyctl status --app "~~_starter.name_~~-~~_starter.name_~~-pr-${{ github.event.number }}" --json > status.json
          hostname=$(jq -r '.Hostname' status.json)
          echo "url=https://${hostname}" >> $GITHUB_OUTPUT
